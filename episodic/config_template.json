{
  "_comment_core": "// === CORE SETTINGS ===",
  "_comment_active_prompt": "The active system prompt template to use for conversations",
  "active_prompt": "default",
  "_comment_debug": "Enable debug output for troubleshooting (shows topic detection details, etc.)",
  "debug": false,
  "_comment_show_cost": "Display token usage and cost information after each response",
  "show_cost": false,
  "_comment_show_drift": "Show semantic drift scores during topic detection",
  "show_drift": true,
  "_comment_muse_mode": "Muse mode: treat all input as web search queries (like Perplexity)",
  "muse_mode": false,
  "_comment_response_style": "Global response style for all modes: concise, standard, comprehensive, custom",
  "response_style": "standard",
  "_comment_response_format": "Global response format for all modes: paragraph, bulleted, mixed, academic",
  "response_format": "mixed",
  
  "_comment_topic": "// === TOPIC DETECTION SETTINGS ===",
  "_comment_automatic_topic_detection": "Enable automatic topic detection during conversations",
  "automatic_topic_detection": true,
  "_comment_auto_compress_topics": "Automatically compress topics when they end (reduces context size)",
  "auto_compress_topics": true,
  "_comment_min_messages_before_topic_change": "Minimum user messages required before allowing a topic change",
  "min_messages_before_topic_change": 8,
  "_comment_running_topic_guess": "Show topic predictions in responses (not yet implemented)",
  "running_topic_guess": true,
  "_comment_show_topics": "Display topic evolution information in responses",
  "show_topics": false,
  "_comment_analyze_topic_boundaries": "Analyze recent messages to find precise topic boundaries when topic changes",
  "analyze_topic_boundaries": false,
  "_comment_use_llm_boundary_analysis": "Use LLM for boundary analysis instead of heuristics (more accurate but costs tokens)",
  "use_llm_boundary_analysis": false,
  "_comment_manual_index_window_size": "Default sliding window size for manual topic indexing with /index command",
  "manual_index_window_size": 3,
  "_comment_manual_index_threshold": "Drift score threshold for detecting topic boundaries (0.0-1.0, higher = more sensitive)",
  "manual_index_threshold": 0.75,
  
  "_comment_hybrid": "// === HYBRID TOPIC DETECTION ===",
  "_comment_use_hybrid_topic_detection": "Use multi-signal topic detection (combines drift, keywords, gaps, etc.)",
  "use_hybrid_topic_detection": false,
  "_comment_use_sliding_window_detection": "Use sliding window detection (compares groups of messages)",
  "use_sliding_window_detection": true,
  "_comment_sliding_window_size": "Size of sliding windows for topic detection",
  "sliding_window_size": 3,
  "_comment_hybrid_topic_weights": "Weight distribution for hybrid detection signals (must sum to 1.0)",
  "hybrid_topic_weights": {
    "semantic_drift": 0.6,
    "keyword_explicit": 0.25,
    "keyword_domain": 0.1,
    "message_gap": 0.025,
    "conversation_flow": 0.025
  },
  "_comment_hybrid_topic_threshold": "Overall threshold for hybrid topic change detection (0.0-1.0)",
  "hybrid_topic_threshold": 0.55,
  "_comment_hybrid_llm_threshold": "Threshold below which to use LLM fallback for confirmation",
  "hybrid_llm_threshold": 0.3,
  "_comment_drift_threshold": "Threshold for sliding window detection (0.9+ indicates topic change)",
  "drift_threshold": 0.9,
  "_comment_keyword_threshold": "Threshold for keyword-based topic detection",
  "keyword_threshold": 0.5,
  
  "_comment_streaming": "// === STREAMING SETTINGS ===",
  "_comment_stream_responses": "Enable streaming responses for better user experience",
  "stream_responses": true,
  "_comment_stream_rate": "Words per second for constant-rate streaming",
  "stream_rate": 15,
  "_comment_stream_constant_rate": "Use constant rate streaming instead of token-based streaming",
  "stream_constant_rate": false,
  "_comment_stream_natural_rhythm": "Add natural pauses and rhythm to streaming (commas, periods, etc.)",
  "stream_natural_rhythm": false,
  "_comment_stream_char_mode": "Stream character by character instead of word by word",
  "stream_char_mode": false,
  "_comment_stream_char_rate": "Characters per second for character-mode streaming",
  "stream_char_rate": 1000,
  "_comment_stream_line_delay": "Delay in seconds between lines when streaming",
  "stream_line_delay": 0.1,
  
  "_comment_models": "// === MODEL PARAMETERS ===",
  "_comment_main_params": "Parameters for main conversation with LLM",
  "main_params": {
    "temperature": 0.7,
    "max_tokens": null,
    "top_p": 1.0,
    "presence_penalty": 0.0,
    "frequency_penalty": 0.0,
    "stop": []
  },
  "_comment_topic_params": "Parameters for topic detection (lower temp for consistency)",
  "topic_params": {
    "temperature": 0.3,
    "max_tokens": 50,
    "top_p": 0.9,
    "presence_penalty": 0.0,
    "frequency_penalty": 0.0,
    "stop": []
  },
  "_comment_compression_params": "Parameters for compression/summarization",
  "compression_params": {
    "temperature": 0.5,
    "max_tokens": 500,
    "top_p": 1.0,
    "presence_penalty": 0.1,
    "frequency_penalty": 0.1,
    "stop": []
  },
  
  "_comment_cache": "// === CACHING & PERFORMANCE ===",
  "_comment_use_context_cache": "Use context caching to reduce API costs (when supported by provider)",
  "use_context_cache": true,
  "_comment_benchmark": "Enable performance benchmarking",
  "benchmark": false,
  "_comment_benchmark_display": "Display benchmark results after commands",
  "benchmark_display": false,
  
  "_comment_compression": "// === COMPRESSION SETTINGS ===",
  "_comment_compression_model": "Model to use for topic compression (instruct models recommended)",
  "compression_model": "huggingface/tiiuae/falcon-7b-instruct",
  "_comment_compression_min_nodes": "Minimum nodes required before allowing compression",
  "compression_min_nodes": 10,
  "_comment_show_compression_notifications": "Show notifications when topics are compressed",
  "show_compression_notifications": true,
  
  "_comment_models_detect": "// === MODEL SELECTION ===",
  "_comment_topic_detection_model": "Model to use for topic detection (instruct models recommended)",
  "topic_detection_model": "huggingface/tiiuae/falcon-7b-instruct",
  "_comment_model": "Current conversation model (set via /model command)",
  "model": "gpt-4o-mini",
  
  "_comment_llm_keys": "// === LLM PROVIDER API KEYS ===",
  "openai_api_key": null,
  "anthropic_api_key": null,
  "google_api_key": null,
  "groq_api_key": null,
  "together_api_key": null,
  "mistral_api_key": null,
  "cohere_api_key": null,
  "deepseek_api_key": null,
  "deepinfra_api_key": null,
  "perplexity_api_key": null,
  "fireworks_api_key": null,
  "anyscale_api_key": null,
  "replicate_api_key": null,
  "huggingface_api_key": null,
  "ai21_api_key": null,
  "voyage_api_key": null,
  "openrouter_api_key": null,
  "brave_api_key": null,
  "azure_api_key": null,
  "azure_api_base": null,
  "azure_api_version": null,
  "bedrock_access_key_id": null,
  "bedrock_secret_access_key": null,
  "bedrock_region": "us-east-1",
  "vertex_project": null,
  "vertex_location": "us-central1",
  "openrouter_api_base": "https://openrouter.ai/api/v1",
  "openrouter_site_url": null,
  "openrouter_app_name": "Episodic",
  "openrouter_default_models": [
    "anthropic/claude-opus-4-20250514",
    "anthropic/claude-3-opus",
    "anthropic/claude-3-sonnet",
    "anthropic/claude-3-haiku",
    "openai/gpt-4-turbo-preview",
    "openai/gpt-4",
    "openai/gpt-3.5-turbo",
    "google/gemini-pro",
    "meta-llama/llama-2-70b-chat",
    "mistralai/mixtral-8x7b-instruct",
    "cohere/command-r-plus"
  ],
  
  "_comment_display": "// === DISPLAY SETTINGS ===",
  "_comment_color_mode": "Color mode: none, basic, or full",
  "color_mode": "full",
  "_comment_text_wrap": "Enable text wrapping for long lines",
  "text_wrap": true,
  "_comment_context_depth": "Default context depth for building conversation history",
  "context_depth": 5,
  "_comment_enable_tab_completion": "Enable tab completion for commands and parameters",
  "enable_tab_completion": true,
  "_comment_interface_mode": "Interface mode: simple (7 commands) or advanced (all commands)",
  "interface_mode": "advanced",
  "_comment_use_llm_filenames": "Use LLM to generate descriptive filenames when saving conversations",
  "use_llm_filenames": true,
  "_comment_show_input_box": "Display user input in a styled box after typing",
  "show_input_box": true,
  "_comment_use_unicode_boxes": "Use Unicode box-drawing characters (disable for basic terminals)",
  "use_unicode_boxes": true,
  "_comment_export_directory": "Directory for saving exported markdown files (~ is expanded to home directory)",
  "export_directory": "~/.episodic/exports",
  
  "_comment_system_memory": "// === SYSTEM MEMORY (CONVERSATION HISTORY) ===",
  "_comment_system_memory_enabled": "Enable automatic conversation memory (always recommended)",
  "system_memory_enabled": true,
  "_comment_system_memory_auto_store": "Automatically store conversations in memory",
  "system_memory_auto_store": true,
  "_comment_system_memory_auto_context": "Automatically use conversation memory for context",
  "system_memory_auto_context": true,
  
  "_comment_rag": "// === USER RAG (YOUR INDEXED DOCUMENTS) ===",
  "_comment_rag_enabled": "Enable RAG for your own indexed documents",
  "rag_enabled": false,
  "_comment_rag_auto_search": "Automatically search knowledge base for each user message",
  "rag_auto_search": true,
  "_comment_rag_search_threshold": "Minimum relevance score for including search results (0.0-1.0)",
  "rag_search_threshold": 0.7,
  "_comment_rag_max_results": "Maximum number of search results to include in context",
  "rag_max_results": 5,
  "_comment_rag_embedding_model": "Sentence transformer model for creating embeddings",
  "rag_embedding_model": "all-MiniLM-L6-v2",
  "_comment_rag_include_citations": "Include source citations in LLM responses",
  "rag_include_citations": true,
  "_comment_rag_context_prefix": "Text added before RAG context in prompts",
  "rag_context_prefix": "\n\n[Relevant context from knowledge base]:\n",
  "_comment_rag_chunk_size": "Number of words per document chunk when indexing",
  "rag_chunk_size": 500,
  "_comment_rag_chunk_overlap": "Number of overlapping words between chunks",
  "rag_chunk_overlap": 100,
  "_comment_rag_max_file_size": "Maximum file size for indexing in bytes (10MB)",
  "rag_max_file_size": 10485760,
  "_comment_rag_show_citations": "Show which documents were used in responses",
  "rag_show_citations": true,
  "_comment_rag_citation_style": "How to display citations: 'inline' or 'footnote'",
  "rag_citation_style": "inline",
  "_comment_rag_allowed_file_types": "Allowed file extensions for indexing",
  "rag_allowed_file_types": [".txt", ".md", ".pdf", ".rst"],
  "_comment_rag_preserve_formatting": "Use format-preserving chunking",
  "rag_preserve_formatting": true,
  
  "_comment_websearch": "// === WEB SEARCH SETTINGS ===",
  "_comment_web_search_enabled": "Enable web search functionality for current information",
  "web_search_enabled": false,
  "_comment_web_search_provider": "Search provider: duckduckgo, searx, google, bing",
  "web_search_provider": "duckduckgo",
  "_comment_web_search_providers": "Ordered list of providers for fallback",
  "web_search_providers": ["duckduckgo"],
  "_comment_web_search_fallback_enabled": "Enable automatic fallback to next provider",
  "web_search_fallback_enabled": true,
  "_comment_web_search_fallback_cache_minutes": "Cache working provider for N minutes",
  "web_search_fallback_cache_minutes": 5,
  "_comment_web_search_auto_enhance": "Automatically search web when local RAG results are insufficient",
  "web_search_auto_enhance": false,
  "_comment_web_search_cache_duration": "Cache duration for search results in seconds (1 hour)",
  "web_search_cache_duration": 3600,
  "_comment_web_search_max_results": "Maximum number of web results to retrieve",
  "web_search_max_results": 5,
  "_comment_web_search_rate_limit": "Maximum searches allowed per hour (rate limiting)",
  "web_search_rate_limit": 60,
  "_comment_web_search_index_results": "Index web search results into RAG for future use",
  "web_search_index_results": true,
  "_comment_web_search_timeout": "Search timeout in seconds",
  "web_search_timeout": 10,
  "_comment_web_search_require_confirmation": "Ask for confirmation before performing web searches",
  "web_search_require_confirmation": false,
  "_comment_web_search_excluded_domains": "List of domains to exclude from search results",
  "web_search_excluded_domains": [],
  "_comment_web_search_show_urls": "Show URLs in search result display",
  "web_search_show_urls": true,
  "_comment_web_search_extract_content": "Extract actual page content from search results (slower)",
  "web_search_extract_content": true,
  "_comment_web_search_synthesize": "Synthesize search results into comprehensive answer",
  "web_search_synthesize": true,
  "_comment_web_show_sources": "Show sources when synthesizing",
  "web_show_sources": false,
  "_comment_web_show_raw": "Show raw search results instead of synthesizing",
  "web_show_raw": false,
  
  "_comment_muse": "// === MUSE MODE SYNTHESIS ===",
  "_comment_muse_detail": "Detail level: minimal, moderate, detailed, maximum",
  "muse_detail": "moderate",
  "_comment_muse_max_tokens": "Direct token limit (overrides style if set)",
  "muse_max_tokens": null,
  "_comment_muse_sources": "Source selection: first-only, top-three, all-relevant",
  "muse_sources": "top-three",
  "_comment_muse_model": "Model for synthesis (deprecated - use synthesis_model instead)",
  "muse_model": null,
  "_comment_synthesis_model": "Model to use for web search synthesis (instruct models recommended)",
  "synthesis_model": "huggingface/tiiuae/falcon-7b-instruct",
  "_comment_muse_context_depth": "Number of previous messages to include as context in muse mode",
  "muse_context_depth": 5,
  
  "_comment_providers": "// === SEARCH PROVIDER SETTINGS ===",
  "_comment_searx_instance_url": "Searx instance URL (can be self-hosted for privacy)",
  "searx_instance_url": "https://searx.be",
  "_comment_google_search_engine_id": "Google Custom Search Engine ID (or set GOOGLE_SEARCH_ENGINE_ID env var)",
  "google_search_engine_id": null,
  "_comment_bing_api_key": "Bing Search API key (or set BING_API_KEY env var)",
  "bing_api_key": null,
  "_comment_bing_endpoint": "Bing Search API endpoint",
  "bing_endpoint": "https://api.bing.microsoft.com/v7.0/search",
  
  "_comment_drift": "// === DRIFT DETECTION EMBEDDING SETTINGS ===",
  "_comment_drift_embedding_provider": "Provider: sentence-transformers, openai, huggingface",
  "drift_embedding_provider": "sentence-transformers",
  "_comment_drift_embedding_model": "Model name for drift detection embeddings",
  "drift_embedding_model": "paraphrase-mpnet-base-v2"
}