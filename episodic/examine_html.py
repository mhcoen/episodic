"""
Script to examine the HTML file generated by PyVis.
"""

from episodic.visualization import visualize_dag

# Generate a visualization and save it to a file
output_path = visualize_dag(output_path="test_visualization.html", interactive=True)
print(f"Visualization saved to: {output_path}")

# Read the HTML file
with open(output_path, "r") as f:
    html = f.read()

# Print the part of the HTML file that creates the network object
network_creation_start = html.find("var network =")
if network_creation_start != -1:
    network_creation_end = html.find(";", network_creation_start)
    network_creation = html[network_creation_start:network_creation_end+1]
    print("\nNetwork creation code:")
    print(network_creation)
else:
    print("\nCould not find network creation code.")

# Print the part of the HTML file that defines the network variable
network_var_start = html.find("var network;")
if network_var_start != -1:
    print("\nNetwork variable definition:")
    print("var network;")
else:
    print("\nCould not find network variable definition.")

# Look for the function that initializes the network
init_network_start = html.find("function init")
if init_network_start != -1:
    # Find the end of the function
    init_network_end = html.find("}", init_network_start)
    init_network = html[init_network_start:init_network_end+1]
    print("\nNetwork initialization function:")
    print(init_network)
else:
    print("\nCould not find network initialization function.")

# Look for where the network is created
network_new_start = html.find("network = new vis.Network")
if network_new_start != -1:
    network_new_end = html.find(";", network_new_start)
    network_new = html[network_new_start:network_new_end+1]
    print("\nNetwork creation with new vis.Network:")
    print(network_new)
else:
    print("\nCould not find network creation with new vis.Network.")
